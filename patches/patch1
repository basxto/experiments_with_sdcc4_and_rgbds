 sdcc/src/z80/main.c | 18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

diff --git a/sdcc/src/z80/main.c b/sdcc/src/z80/main.c
index d1425b9..bad0316 100644
--- a/sdcc/src/z80/main.c
+++ b/sdcc/src/z80/main.c
@@ -289,7 +289,7 @@ do_pragma (int id, const char *name, const char *cp)
                 break;
 
               case ASM_TYPE_RGBDS:
-                dbuf_printf (&buffer, "CODE,BANK[%d]", token.val.int_val);
+                dbuf_printf (&buffer, "ROMX,BANK[%d]", token.val.int_val);
                 break;
 
               case ASM_TYPE_ISAS:
@@ -500,7 +500,11 @@ _parseOptions (int *pargc, char **argv, int *i)
               struct dbuf_s buffer;
 
               dbuf_init (&buffer, 16);
-              dbuf_printf (&buffer, "CODE_%u", bank);
+              if (_G.asmType == ASM_TYPE_RGBDS) {
+                dbuf_printf (&buffer, "ROMX,BANK[%u]", bank);
+              } else {
+                dbuf_printf (&buffer, "CODE_%u", bank);
+              }
               dbuf_c_str (&buffer);
               /* ugly, see comment in src/port.h (borutr) */
               gbz80_port.mem.code_name = dbuf_detach (&buffer);
@@ -514,7 +518,11 @@ _parseOptions (int *pargc, char **argv, int *i)
               struct dbuf_s buffer;
 
               dbuf_init (&buffer, 16);
-              dbuf_printf (&buffer, "DATA_%u", bank);
+              if (_G.asmType == ASM_TYPE_RGBDS) {
+                dbuf_printf (&buffer, "WRAMX,BANK[%u]", bank);
+              } else {
+                dbuf_printf (&buffer, "DATA_%u", bank);
+              }
               dbuf_c_str (&buffer);
               /* ugly, see comment in src/port.h (borutr) */
               gbz80_port.mem.data_name = dbuf_detach (&buffer);
@@ -532,6 +540,10 @@ _parseOptions (int *pargc, char **argv, int *i)
               gbz80_port.assembler.cmd = _gbz80_rgbasmCmd;
               gbz80_port.linker.cmd = _gbz80_rgblinkCmd;
               gbz80_port.linker.do_link = _gbz80_rgblink;
+
+			  gbz80_port.mem.code_name = "ROMX";
+			  gbz80_port.mem.data_name = "WRAMX";
+
               _G.asmType = ASM_TYPE_RGBDS;
               return TRUE;
             }
